
@mixin vrampbreakpoint($point) {
  @if $point == xlarge {
    @media (min-width: 1920px) { @content; }
  }
  
  @if $point == large {
    @media (min-width: 1600px) { @content; }
  }

  @if $point == medium {
    @media (min-width: 1280px) { @content; }
  }

  @if $point == small {
    @media (min-width: 960px) { @content; }
  }

  @if $point == smallmax {
    @media (max-width: 1280px) { @content; }
  }
}

@mixin aspectBreakpoint($point){
  @if $point == wide{
    @media screen and (min-aspect-ratio: 16/9) { @content; }  
  }
  @if $point == square{
    @media screen and (max-aspect-ratio: 4/3) { @content; }  
  }
}


@mixin ellipsize{
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

@mixin lineclamp($length){
  display: -webkit-box;
  text-overflow: ellipsis;
  overflow-y: hidden;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $length;
}

@mixin multiLineFadeEllipsis($lineHeight: 1.2em, $lineCount: 1, $bgColor: white){
  overflow: hidden;
  display: block;
  position: relative;
  line-height: $lineHeight;
  max-height: $lineHeight * $lineCount - 0.1vw; 

  &:before {
    content: '';
    height: 1.2em;
    width: 200px;
    background: linear-gradient(to right, rgba(white,0), white 50%);
    position: absolute;
    right: 0;
    bottom: 0;
  }
  &:after {
    content: '';
    position: absolute;
    right: 0;
    width: 200px;
    height: 1.2em;
    margin-top: 0.2em;
    background: $bgColor;
  }
}

@mixin absfill{
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
}

@mixin vert-align{
  top: 50%;
  position: relative;
  transform: translateY(-50%);
}



//TRANSITIONS
$transition-time_1: .2s;
$transition-time_2: .35s;
$transition-function: cubic-bezier(0.630, 0.005, 0.365, 1.000);//cubic-bezier(0.95, 0.05, 0.795, 0.035);

$transition: $transition-time_1 $transition-function;

@mixin transition($properties...){
  transition-property: $properties;
  transition-duration: $transition-time_2;
  transition-timing-function: $transition-function;
}

@mixin transition-delayed($delay, $properties...){
  transition-property: $properties;
  transition-duration: $transition-time_2;
  transition-timing-function: $transition-function;
  transition-delay: $delay;
}



//BASE STYLES

label{
	color: inherit;
}

html{
  height: 100%;
}

body{
	overflow: hidden;
  height: 100%;
}

.fullscreenbg{
	position: absolute;
	top: 0;
	left: 0;
	
	min-width: 100%;
	min-height: 100%;
}


.prototype-controls{
	position: fixed;
	top: 120px;
	left: 0;
	background-color: white;
	box-shadow: $ritchie-shadow;
	padding: 20px;
	z-index: 2;
	transition: $transition;

  &.s-hidecontrols{
    transform: translateX(-90%);
  }

	button{
		margin-bottom: 10px;
	}
}

  .prototype--hide{
    position: absolute;
    right: 10px;
    top: 10px;
    transform: rotate(0deg);
    cursor: pointer;
    transition: $transition;

    &:hover i{
      color: $brand-color; 
    }
    
    .s-hidecontrols &{
      transform: rotate(180deg);
    }
  }



